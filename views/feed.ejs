<% include ./partials/header.ejs %>

    <div class="posts parent mb-20">
        <% posts.reverse().forEach(function(post){ %>
            <div class="post-container mx-auto mt-10 w-full min-h-[50vh] max-w-lg">
                <div class="title px-4 flex items-center gap-2">
                    <div class="w-[70px] h-[70px] bg-sky-100 rounded-full overflow-hidden">
                        <img class="w-full h-full object-cover" src="/images/uploads/<%= post.user.profileimage %>"
                            alt="">
                    </div>
                    <h4 class="text-sm">
                        <%= post.user.username %>
                    </h4>
                    <h6 class="text-xs opacity-30">
                        <%= dater(new Date(post.date)) %>
                    </h6>
                </div>
                <div class="relative w-full mt-4 bg-sky-100 overflow-hidden">
                    <img data-postid="<%= post.id %>" class="postimg w-full h-full object-cover"
                        src="/images/uploads/<%= post.postimage %>" alt="">
                </div>
                <div class="options w-full px-4 flex justify-between items-center text-[1.4rem]">
                    <div class="flex gap-3 mt-2">
                        <% if(post.like.indexOf(user._id)===-1){ %>
                            <i class="heart ri-heart-3-line"></i>
                            <% } else { %>
                                <i class="heart ri-heart-3-fill text-red-500"></i>
                                <% } %>
                                    <i class="ri-chat-3-line"></i>
                                    <i class="ri-share-circle-line"></i>
                    </div>
                </div>
                <h3 class="likeval px-4 mt-2 text-sm leading-none tracking-tight">
                    <%= post.like.length %> likes
                </h3>
                <h2 class="text-black font-light text-sm mt-2">
                    <span class="font-semibold pl-4 pr-2">
                        <%= post.user.username %>
                    </span>
                    <%= post.caption %>
                </h2>

                <!-- Display comments -->
                <div class="comments mt-4">
                    <% post.comments.forEach(function(comment) { %>
                        <div class="comment mb-2">
                            <p><strong>
                                    <%= comment.user.username %>:
                                </strong>
                                <%= comment.text %>
                            </p>
                            <p class="text-xs text-gray-500">
                                <%= dater(new Date(comment.date)) %>
                            </p>
                            <% if(comment.user._id===user._id) { %>
                                <button class="delete-comment" data-comment-id="<%= comment._id %>">Delete</button>
                                <% } %>
                        </div>
                        <% }) %>
                </div>

                <!-- Comment form -->
                <form class="comment-form mt-4" method="POST" action="/comment/<%= post._id %>">
                    <input type="text" name="comment" placeholder="Add a comment..."
                        class="w-full px-3 py-2 border border-gray-300 rounded-md">
                    <button type="submit"
                        class="bg-blue-500 text-white py-2 px-4 rounded-md hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500 mt-2">Comment</button>
                </form>
            </div>
            <% }) %>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.12.5/gsap.min.js" crossorigin="anonymous"
        referrerpolicy="no-referrer"></script>
    <script>
        document.querySelector(".parent")
            .addEventListener("click", function (dets) {
                if (dets.target.classList.contains("postimg")) {
                    var post = dets.target.parentNode.parentNode;
                    var heartwithborder = post.querySelector(".heart");
                    if (heartwithborder.classList.contains("ri-heart-3-line")) {
                        heartwithborder.classList.remove("ri-heart-3-line")
                        heartwithborder.classList.add("ri-heart-3-fill")
                        heartwithborder.classList.add("text-red-500")
                    } else {
                        heartwithborder.classList.remove("ri-heart-3-fill")
                        heartwithborder.classList.remove("text-red-500")
                        heartwithborder.classList.add("ri-heart-3-line")
                    }
                    fetch(`/like/${dets.target.dataset.postid}`)
                        .then(raw => raw.json())
                        .then(response => {
                            post.querySelector(".likeval").textContent = response.like.length + " likes"
                        })

                    var icon = document.createElement("i");
                    icon.classList.add("ri-heart-3-fill");
                    icon.classList.add("text-red-700", "text-6xl", 'absolute', 'top-1/2', 'left-1/2', '-translate-x-[50%]', '-translate-y-[50%]', 'z-[9]');
                    dets.target.parentNode.appendChild(icon);

                    gsap.from(icon, {
                        scale: .5,
                        y: 30,
                        opacity: 0,
                        ease: Expo,
                        duration: .3
                    })

                    gsap.to(icon, {
                        scale: 0,
                        y: -30,
                        opacity: 0,
                        duration: .3,
                        ease: Expo,
                        delay: .3,
                        onComplete: () => {
                            dets.target.parentNode.removeChild(icon);
                        }
                    })
                }
            });

        // AJAX comment submission
        document.querySelectorAll('.comment-form').forEach(form => {
            form.addEventListener('submit', function (event) {
                event.preventDefault();
                const postId = this.action.split('/').pop();
                const commentInput = this.querySelector('input[name="comment"]');
                const commentText = commentInput.value.trim();

                if (commentText) {
                    fetch(`/comment/${postId}`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ text: commentText })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                const commentSection = this.closest('.post-container').querySelector('.comments');
                                const newComment = document.createElement('div');
                                newComment.classList.add('comment', 'mb-2');
                                newComment.innerHTML = `
                            <p><strong>${data.user.username}:</strong> ${data.comment.text}</p>
                            <p class="text-xs text-gray-500">${data.comment.date}</p>
                            <button class="delete-comment" data-comment-id="${data.comment._id}">Delete</button>
                        `;
                                commentSection.appendChild(newComment);
                                commentInput.value = '';
                            }
                        })
                        .catch(error => console.error('Error:', error));
                }
            });
        });

        // Comment deletion
        document.addEventListener('click', function (event) {
            if (event.target.classList.contains('delete-comment')) {
                const commentId = event.target.dataset.commentId;

                fetch(`/comment/${commentId}`, {
                    method: 'DELETE'
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            event.target.closest('.comment').remove();
                        }
                    })
                    .catch(error => console.error('Error:', error));
            }
        });
    </script>

    <% include ./partials/footer.ejs %>